<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lead Management - Hospital Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
   <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Y09GBB2Y7Z"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Y09GBB2Y7Z');
</script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand" href="/dashboard">Hospital Admin</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/dashboard">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/leads">Leads</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/feedback">Feedback</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <h2>Lead Management</h2>
        
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <h5 class="card-title">New Leads</h5>
                        <h2 id="newLeadsCount">0</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <h5 class="card-title">Contacted</h5>
                        <h2 id="contactedLeadsCount">0</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <h5 class="card-title">Converted</h5>
                        <h2 id="convertedLeadsCount">0</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-danger text-white">
                    <div class="card-body">
                        <h5 class="card-title">Lost</h5>
                        <h2 id="lostLeadsCount">0</h2>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Service</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="leadsTableBody">
                            <!-- Leads will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Lead Details Modal -->
    <div class="modal fade" id="leadModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Lead Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Status</label>
                        <select class="form-select" id="leadStatus">
                            <option value="new">New</option>
                            <option value="contacted">Contacted</option>
                            <option value="qualified">Qualified</option>
                            <option value="converted">Converted</option>
                            <option value="lost">Lost</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Add Note</label>
                        <textarea class="form-control" id="noteText" rows="3"></textarea>
                    </div>
                    <div id="notesList" class="list-group">
                        <!-- Notes will be populated here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveNote">Add Note</button>
                    <button type="button" class="btn btn-success" id="updateStatus">Update Status</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentLeadId = null;

        // Fetch and display leads
        async function fetchLeads() {
            try {
                const response = await fetch('/api/leads/all');
                const leads = await response.json();
                
                // Update counts
                const counts = {
                    new: 0,
                    contacted: 0,
                    converted: 0,
                    lost: 0
                };
                
                // Clear table
                const tableBody = document.getElementById('leadsTableBody');
                tableBody.innerHTML = '';
                
                // Populate table
                leads.forEach(lead => {
                    counts[lead.status] = (counts[lead.status] || 0) + 1;
                    
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${new Date(lead.createdAt).toLocaleDateString()}</td>
                        <td>${lead.name}</td>
                        <td>${lead.email}</td>
                        <td>${lead.phone}</td>
                        <td>${lead.service || '-'}</td>
                        <td><span class="badge bg-${getStatusColor(lead.status)}">${lead.status}</span></td>
                        <td>
                            <button class="btn btn-sm btn-primary" onclick="openLeadModal('${lead._id}')">
                                Manage
                            </button>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });
                
                // Update count displays
                document.getElementById('newLeadsCount').textContent = counts.new || 0;
                document.getElementById('contactedLeadsCount').textContent = counts.contacted || 0;
                document.getElementById('convertedLeadsCount').textContent = counts.converted || 0;
                document.getElementById('lostLeadsCount').textContent = counts.lost || 0;
                
            } catch (error) {
                console.error('Error fetching leads:', error);
            }
        }

        function getStatusColor(status) {
            const colors = {
                new: 'primary',
                contacted: 'warning',
                qualified: 'info',
                converted: 'success',
                lost: 'danger'
            };
            return colors[status] || 'secondary';
        }

        async function openLeadModal(leadId) {
            currentLeadId = leadId;
            const modal = new bootstrap.Modal(document.getElementById('leadModal'));
            modal.show();
            
            // Fetch lead details and notes
            try {
                const response = await fetch(`/api/leads/${leadId}`);
                const lead = await response.json();
                
                document.getElementById('leadStatus').value = lead.status;
                
                // Display notes
                const notesList = document.getElementById('notesList');
                notesList.innerHTML = '';
                lead.notes.forEach(note => {
                    const noteElement = document.createElement('div');
                    noteElement.className = 'list-group-item';
                    noteElement.innerHTML = `
                        <small class="text-muted">${new Date(note.createdAt).toLocaleString()}</small>
                        <p class="mb-0">${note.text}</p>
                    `;
                    notesList.appendChild(noteElement);
                });
            } catch (error) {
                console.error('Error fetching lead details:', error);
            }
        }

        // Event listeners
        document.getElementById('saveNote').addEventListener('click', async () => {
            const noteText = document.getElementById('noteText').value;
            if (!noteText.trim()) return;
            
            try {
                await fetch(`/api/leads/${currentLeadId}/notes`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ text: noteText })
                });
                
                document.getElementById('noteText').value = '';
                await fetchLeads();
            } catch (error) {
                console.error('Error saving note:', error);
            }
        });

        document.getElementById('updateStatus').addEventListener('click', async () => {
            const status = document.getElementById('leadStatus').value;
            
            try {
                await fetch(`/api/leads/${currentLeadId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status })
                });
                
                await fetchLeads();
                bootstrap.Modal.getInstance(document.getElementById('leadModal')).hide();
            } catch (error) {
                console.error('Error updating status:', error);
            }
        });

        // Initial load
        fetchLeads();
    </script>
</body>
</html> 